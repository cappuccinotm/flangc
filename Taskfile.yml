version: '3'

tasks:
  lint:
    cmds:
      - golangci-lint run ./...
    dir: .
    desc: Run linters
    silent: true

  test:
    cmds:
      - go test ./... -count=1
    desc: Run tests without caching
    dir: .
    silent: true

  genlex:
    cmds:
      - nex -o ./app/lexer/lexer.nn.temp.go -s ./app/lexer/lang.nex
      - goimports ./app/lexer/lexer.nn.temp.go > ./app/lexer/lexer.imported.nn.temp.go
      - gofmt ./app/lexer/lexer.imported.nn.temp.go  > ./app/lexer/lexer.nn.go
      - rm ./app/lexer/lexer.nn.temp.go ./app/lexer/lexer.imported.nn.temp.go
    desc: Generate lexer
    dir: .
    silent: true

  genparser:
    cmds:
      - goyacc -p "parser" -o ./app/parser/parser.yacc.go ./app/parser/lang.y
    desc: Generate parser
    dir: .
    silent: true

  build:
    cmds:
      - echo "Building version {{.VERSION}}"
      - GOOS=windows GOARCH=386 go build -mod=vendor -o='./build/flangc_windows' -ldflags="-X 'main.version="{{.VERSION}}"' -s -w" ./app/main.go
      - GOOS=linux GOARCH=386 go build -mod=vendor -o='./build/flangc_linux' -ldflags="-X 'main.version="{{.VERSION}}"' -s -w" ./app/main.go
      - GOOS=darwin GOARCH=amd64 go build -mod=vendor -o='./build/flangc_macos' -ldflags="-X 'main.version="{{.VERSION}}"' -s -w" ./app/main.go
      - GOOS=darwin GOARCH=arm64 go build -mod=vendor -o='./build/flangc_m1' -ldflags="-X 'main.version="{{.VERSION}}"' -s -w" ./app/main.go
    desc: Build the application at ./build/flangc
    dir: .
    silent: true
    vars:
      VERSION:
        sh: git describe --tags --long
